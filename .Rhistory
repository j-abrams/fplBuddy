use_r("fpl_calculate_predictors")
library(devtools)
use_r("fpl_calculate_predictors")
load_all()
load_all()
check()
devtools::document()
install()
library(fplBuddy)
install()
devtools::document()
install()
devtools::install()
library(fplBuddy)
fpl_load_historic_data()
library(dplyr)
fpl_load_historic_data()
devtools::install_github("ewenme/fplr", force = T)
library(fplr)
fpl_load_historic_data()
fpl_load_historic_data()
files <- lapply(list.files(system.file('R/data', package = 'fplBuddy'), full.names = TRUE), read.csv)
files <- lapply(list.files(system.file('data', package = 'fplBuddy'), full.names = TRUE), read.csv)
test <- fpl_load_historic_data()
save(test, file = fpl_historic_data.rda)
save(test, file = data.rda)
all_gameweeks <- read.csv("R/sysdata.rda/fpl_historical_data.csv")
devtools::install()
usethis::use_data(test, fpl_historical_data)
usethis::use_data(test, test)
usethis::use_data(test, fpl_historical_data)
usethis::use_data(fpl_historical_data, test)
fpl_historical_data <- test
usethis::use_data(fpl_historical_data)
devtools::install()
library(fplBuddy)
fpl_historical_data
devtools::install()
library(fplBuddy)
library(fplBuddy)
fpl_load_historic_data()
library()
library(fplBuddy)
check()
library(devtools)
library(fplr)
load_all()
fpl_historical_data
fplBuddy::fpl_load_historic_data()
install("fplBuddy")
install.packages("fplBuddy")
install.packages("fplBuddy")
library(fplBuddy)
check()
devtools::check()
install()
library(fplBuddy)
fplBuddy::fpl_historical_data
document()
devtools::document()
install.packages("fuzzyjoin")
install.packages("Rglpk")
devtools::document()
load_all()
library(devtools)
load_all()
#library(dplyr)
library(devtools)
load_all()
fplBuddy::fpl_load_historic_data()
#library(dplyr)
library(devtools)
load_all()
library(fplBuddy)
fpl_load_historic_data()
#library(dplyr)
library(devtools)
load_all()
#library(dplyr)
library(devtools)
load_all()
load_all()
fplBuddy::fpl_fixtures(gameweek1 = 4, 4)
check()
library(devtools)
check()
check()
check()
load_all()
load_all()
fplBuddy::fpl_historical_data
install()
#devtools::install_github("ewenme/fplr", force = T)
#library(fplr)
devtools::install_github("wiscostret/fplscrapR", force = T)
usethis::use_package("fplr")
usethis::use_package("fplscrapR")
devtools::document()
#devtools::install_github("ewenme/fplr", force = T)
#library(fplr)
devtools::install_github("wiscostret/fplscrapR", force = T)
#usethis::use_data(fpl_historical_data)
library(fplscrapR)
install.packages("rlang")
#library(dplyr)
library(devtools)
install.packages("rlang")
install.packages("rlang")
#devtools::install_github("ewenme/fplr", force = T)
#library(fplr)
devtools::install_github("wiscostret/fplscrapR", force = T)
usethis::use_package("fplscrapR")
remotes::install_github("wiscostret/fplscrapR")
#remotes::install_github("wiscostret/fplscrapR")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.1.tar.gz",
repos = NULL, type="source")
library(rlang)
usethis::use_package("fplscrapR")
install.packages("renv")
renv::init()
renv::restore()
renv::snapshot()
usethis::use_package("fplr")
usethis::use_package("fplscrapR")
#devtools::install_github("ewenme/fplr", force = T)
#library(fplr)
devtools::install_github("wiscostret/fplscrapR", force = T)
usethis::use_package("fplscrapR")
usethis::use_package("fplr")
devtools::document()
library(dplyr)
#library(dplyr)
library(devtools)
#devtools::install_github("ewenme/fplr", force = T)
#library(fplr)
devtools::install_github("wiscostret/fplscrapR", force = T)
#devtools::install_github("ewenme/fplr", force = T)
#library(fplr)
devtools::install_github("wiscostret/fplscrapR", force = T)
usethis::use_package("fplr")
devtools::document()
devtools::document()
library(dplyr)
install.packages("dplyr")
library(dplyr)
